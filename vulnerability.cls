public class InsecureApexExample {

    // 1. SOQL Injection via user input
    public static List<Contact> findContactsByEmail(String email) {
        // Vulnerable: User input directly inserted into query string
        String query = 'SELECT Id, Name, Email FROM Contact WHERE Email = \'' + email + '\'';
        return Database.query(query); // SOQL injection risk
    }

    // 2. DML in loop (Governor Limits / DoS risk)
    public static void updateLeads(List<Id> leadIds, String newStatus) {
        for (Id leadId : leadIds) {
            Lead l = [SELECT Id, Status FROM Lead WHERE Id = :leadId];
            l.Status = newStatus;
            update l; // DML operation inside loop - violates best practices
        }
    }

    // 3. Unfiltered web service exposing internal data
    @AuraEnabled(cacheable=true)
    public static List<User> getAllUsers() {
        // No access control — exposes internal user data to front-end!
        return [SELECT Id, Name, Email FROM User];
    }

    // 4. No field-level security check (FLS)
    public static void createContact(Contact c) {
        // Directly inserting Contact object without checking FLS or CRUD
        insert c; // This might expose fields the user shouldn't have access to
    }

    // 5. Unescaped output for Visualforce (XSS risk)
    public static String getWelcomeMessage(String name) {
        // If this value is rendered in a Visualforce page, it can lead to XSS
        return 'Welcome ' + name + '!'; // Should escape output to prevent script injection
    }

    // 6. Open redirect vulnerability
    public static PageReference redirectTo(String urlParam) {
        // Directly using user input for redirection - could lead to phishing
        PageReference p = new PageReference(urlParam); 
        p.setRedirect(true);
        return p;
    }

    // 7. Logging sensitive information
    public static void login(String username, String password) {
        // Logging sensitive data — should never log raw passwords
        System.debug('User login: ' + username + ', password: ' + password);
    }
}
